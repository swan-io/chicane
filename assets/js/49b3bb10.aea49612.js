"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[852],{8453:(e,r,t)=>{t.d(r,{R:()=>a,x:()=>i});var n=t(6540);const s={},o=n.createContext(s);function a(e){const r=n.useContext(o);return n.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function i(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),n.createElement(o.Provider,{value:r},e.children)}},9552:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>u,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var n=t(4848),s=t(8453);const o={title:"Creating your router",sidebar_label:"Creating your router"},a=void 0,i={id:"creating-your-router",title:"Creating your router",description:"The first need you need to do with chicane is to create your router. A router allows you to specify all the routes in your application: each route has a name and a pattern.",source:"@site/docs/creating-your-router.md",sourceDirName:".",slug:"/creating-your-router",permalink:"/chicane/creating-your-router",draft:!1,unlisted:!1,editUrl:"https://github.com/swan-io/chicane/edit/main/docs/docs/creating-your-router.md",tags:[],version:"current",frontMatter:{title:"Creating your router",sidebar_label:"Creating your router"},sidebar:"docs",previous:{title:"Getting started",permalink:"/chicane/getting-started"},next:{title:"Route pattern syntax",permalink:"/chicane/route-pattern-syntax"}},u={},c=[{value:"Routes",id:"routes",level:2},{value:"useRoute",id:"useroute",level:2},{value:"push / replace",id:"push--replace",level:2},{value:"Organizing nested routes",id:"organizing-nested-routes",level:2}];function l(e){const r={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(r.p,{children:["The first need you need to do with chicane is to create your ",(0,n.jsx)(r.strong,{children:"router"}),". A router allows you to specify all the routes in your application: each route has a ",(0,n.jsx)(r.strong,{children:"name"})," and a ",(0,n.jsx)(r.strong,{children:"pattern"}),"."]}),"\n",(0,n.jsxs)(r.p,{children:["To do that, let's import ",(0,n.jsx)(r.code,{children:"createRouter"})," and create our first routes:"]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-ts",metastring:'title="src/router.ts"',children:'import { createRouter } from "@swan-io/chicane";\n\nexport const Router = createRouter({\n  Home: "/",\n  About: "/about",\n  UserList: "/users",\n  UserDetail: "/users/:userId",\n});\n'})}),"\n",(0,n.jsx)(r.p,{children:"That's it! You now have a router that is ready-to-use."}),"\n",(0,n.jsx)(r.p,{children:"Now, let's see what's inside:"}),"\n",(0,n.jsx)(r.h2,{id:"routes",children:"Routes"}),"\n",(0,n.jsxs)(r.p,{children:["First, you have your ",(0,n.jsx)(r.strong,{children:"Routes"}),". You can picture your routes as an opaque value that you can pass around."]}),"\n",(0,n.jsx)(r.p,{children:"You can call a route to create a URL:"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-ts",children:'Router.Home(); // "/"\nRouter.UserDetail({ userId: "1" }); // "/users/1"\n'})}),"\n",(0,n.jsxs)(r.p,{children:["Each route is ",(0,n.jsx)(r.strong,{children:"fully typed"}),", making sure you're passing all the necessary params."]}),"\n",(0,n.jsx)(r.h2,{id:"useroute",children:"useRoute"}),"\n",(0,n.jsxs)(r.p,{children:["Second, you have the ",(0,n.jsx)(r.strong,{children:"useRoute"})," React hook. It takes an ",(0,n.jsx)(r.strong,{children:"array of routes you want to match"}),", and returns the first match (or ",(0,n.jsx)(r.code,{children:"undefined"}),")."]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-ts",children:'const route = Router.useRoute(["UserList", "UserDetail"]);\n\n// -> { name: "UserList", params: {} }\n//  | { name: "UserDetail", params: { userId: "1" } }\n//  | undefined\n'})}),"\n",(0,n.jsxs)(r.p,{children:["You can call ",(0,n.jsx)(r.code,{children:"useRoute"})," in any React component in your application!"]}),"\n",(0,n.jsx)(r.h2,{id:"push--replace",children:"push / replace"}),"\n",(0,n.jsx)(r.p,{children:"The router also provides two functions to navigate programmatically (from your JS code):"}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsx)(r.li,{children:(0,n.jsx)(r.code,{children:"Router.push(routeName, routeParams)"})}),"\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.code,{children:"Router.replace(routeName, routeParams)"})," (doesn't create a new entry in the browser history)"]}),"\n"]}),"\n",(0,n.jsx)(r.h2,{id:"organizing-nested-routes",children:"Organizing nested routes"}),"\n",(0,n.jsxs)(r.p,{children:["If you want to avoid repetitions when having lots of subroutes, you can use a little helper called ",(0,n.jsx)(r.code,{children:"createGroup"}),":"]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-ts",metastring:'title="src/router.ts"',children:'import { createRouter, createGroup } from "@swan-io/chicane";\n\nexport const Router = createRouter({\n  Home: "/",\n  About: "/about",\n\n  ...createGroup("User", "/users", {\n    Area: "/*", // UserArea: "/users/*"\n    List: "/", // UserList: "/users"\n    Detail: "/:userId", // UserDetail: "/users/:userId"\n  }),\n});\n'})})]})}function d(e={}){const{wrapper:r}={...(0,s.R)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}}}]);