"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[885],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=s(n),h=o,m=u["".concat(l,".").concat(h)]||u[h]||d[h]||a;return n?r.createElement(m,c(c({ref:t},p),{},{components:n})):r.createElement(m,c({ref:t},p))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,c=new Array(a);c[0]=h;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[u]="string"==typeof e?e:o,c[1]=i;for(var s=2;s<a;s++)c[s]=n[s];return r.createElement.apply(null,c)}return r.createElement.apply(null,n)}h.displayName="MDXCreateElement"},2628:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>c,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>s});var r=n(7462),o=(n(7294),n(3905));const a={title:"Lower-level API",sidebar_label:"Lower-level API"},c=void 0,i={unversionedId:"lower-level-api",id:"lower-level-api",title:"Lower-level API",description:"Even though you'll mostly need to consume the location through the Router, you might need to dive deeper at some point.",source:"@site/docs/lower-level-api.md",sourceDirName:".",slug:"/lower-level-api",permalink:"/chicane/lower-level-api",draft:!1,editUrl:"https://github.com/swan-io/chicane/edit/main/docs/docs/lower-level-api.md",tags:[],version:"current",frontMatter:{title:"Lower-level API",sidebar_label:"Lower-level API"},sidebar:"docs",previous:{title:"Hooks",permalink:"/chicane/hooks"}},l={},s=[{value:"getLocation",id:"getlocation",level:2},{value:"subscribeToLocation",id:"subscribetolocation",level:2},{value:"encodeSearch / decodeSearch",id:"encodesearch--decodesearch",level:2},{value:"pushUnsafe / replaceUnsafe",id:"pushunsafe--replaceunsafe",level:2}],p={toc:s};function u(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Even though you'll mostly need to consume the location through the ",(0,o.kt)("a",{parentName:"p",href:"./router"},"Router"),", you might need to dive deeper at some point."),(0,o.kt)("h2",{id:"getlocation"},"getLocation"),(0,o.kt)("p",null,"Returns the exploded location (a ",(0,o.kt)("a",{parentName:"p",href:"#getlocation"},"Location object"),")"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'import { getLocation /*, Location */ } from "@swan-io/chicane";\n\ntype Location = {\n  path: string[]; // path split on `/`\n  search: Record<string, string | string[]>;\n  hash?: string;\n  key: string; // a hash for the location\n  raw: { path: string; search: string; hash: string };\n  toString(): string; // returns the imploded location\n};\n\nconst location: Location = getLocation();\nconsole.log(location.path);\n')),(0,o.kt)("h2",{id:"subscribetolocation"},"subscribeToLocation"),(0,o.kt)("p",null,"Subscribes to location changes, and passes a ",(0,o.kt)("a",{parentName:"p",href:"#getlocation"},"Location object")," to the listener."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'import { subscribeToLocation } from "@swan-io/chicane";\n\nsubscribeToLocation((location: Location) => {\n  console.log("Location changed!");\n  console.log(location);\n});\n')),(0,o.kt)("h2",{id:"encodesearch--decodesearch"},"encodeSearch / decodeSearch"),(0,o.kt)("p",null,"Implode and explode search params."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'import { encodeSearch, decodeSearch } from "@swan-io/chicane";\n\nencodeSearch({ invitation: "542022247745", users: ["frank", "chris"] });\n// -> "?invitation=542022247745&users=frank&users=chris"\n\ndecodeSearch("?invitation=542022247745&users=frank&users=chris");\n// -> { invitation: "542022247745", users: ["frank", "chris"] }\n')),(0,o.kt)("h2",{id:"pushunsafe--replaceunsafe"},"pushUnsafe / replaceUnsafe"),(0,o.kt)("p",null,"Escape hatch. Similar to ",(0,o.kt)("inlineCode",{parentName:"p"},"Router.push")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"Router.replace")," but accepts a unique string argument."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'import { pushUnsafe, replaceUnsafe } from "@swan-io/chicane";\n\npushUnsafe("/");\nreplaceUnsafe("?name=frank");\n')))}u.isMDXComponent=!0}}]);